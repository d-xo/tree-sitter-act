constructor of ERC20
interface constructor(uint _totalSupply, uint8 _decimals, string _name, string _symbol)

creates

  string name := _name
  string symbol := _symbol
  uint8 decimals := _decimals
  uint totalSupply := _totalSupply
  mapping (address => uint) balanceOf := [ CALLER := _totalSupply ]
  mapping (address => mapping (address => uint)) allowance := []

invariants

  totalSupply == _totalSupply
  name == _name
  symbol == _symbol
  decimals == _decimals

behaviour transfer of ERC20
interface transfer(address to, uint amt)

iff

  CALLVALUE == 0
  amt <= balanceOf[CALLER]
  CALLER =/= to => balanceOf[to] + amt < 2^256

case CALLER =/= to:

  storage

     balanceOf[CALLER] => balanceOf[CALLER] - amt
     balanceOf[to]     => balanceOf[to] + amt

  returns true

case CALLER == to:

  storage

    balanceOf[CALLER]
    balanceOf[to]

  returns true

behaviour transferFrom of ERC20
interface transferFrom(address src, address dst, uint amt)

iff

  CALLVALUE == 0
  amt <= balanceOf[CALLER]
  src =/= dst => balanceOf[dst] + amt < 2^256
  CALLER =/= src => 0 <= allowance[src][CALLER] - amt

case src =/= dst and CALLER == src:

  storage

     balanceOf[CALLER]
     allowance[src][CALLER]
     balanceOf[src] => balanceOf[src] - amt
     balanceOf[dst] => balanceOf[dst] + amt

  returns true

case src =/= dst and CALLER =/= src and allowance[src][CALLER] == 2^256 - 1:

  storage

     balanceOf[CALLER]
     allowance[src][CALLER]
     balanceOf[src] => balanceOf[src] - amt
     balanceOf[dst] => balanceOf[dst] + amt

  returns true

case src =/= dst and CALLER =/= src and allowance[src][CALLER] < 2^256 - 1:

  storage

    balanceOf[CALLER]
    allowance[src][CALLER] => allowance[src][CALLER] - amt
    balanceOf[src]         => balanceOf[src] - amt
    balanceOf[dst]         => balanceOf[dst] + amt

  returns true

case src == dst:

  storage

     balanceOf[CALLER]
     allowance[src][CALLER]
     balanceOf[src]
     balanceOf[dst]

  returns true

behaviour approve of ERC20
interface approve(address usr, uint amt)

storage

  allowance[CALLER][usr] => amt

returns true

behaviour name of ERC20
interface name()
storage name
returns name

behaviour symbol of ERC20
interface symbol()
storage symbol
returns symbol

behaviour decimals of ERC20
interface decimals()
storage decimals
returns decimals

behaviour totalSupply of ERC20
interface totalSupply()
storage totalSupply
returns totalSupply

behaviour balanceOf of ERC20
interface balanceOf(address usr)
storage balanceOf[usr]
returns balanceOf[usr]

behaviour allowance of ERC20
interface allowance(address src, address dst)
storage allowance[src][dst]
returns allowance[src][dst]
